apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 17
        versionName "1.3.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        // 指定apk名字输出格式 applicationVariants、libraryVariants以及testVariants，他们分别适用于app、library、app和library都适用。
        android.libraryVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${rootProject.name}-${variant.buildType.name}-V${defaultConfig.versionName}.aar"
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "com.github.xiaoming6672:Library_utils:$library_utils"

    implementation "androidx.lifecycle:lifecycle-common:$lifecycle"
    implementation "androidx.navigation:navigation-fragment:$navigation"

    implementation "com.trello.rxlifecycle4:rxlifecycle-components:$rxlifecycle"
    // If you want pre-written Activities and Fragments you can subclass as providers
    implementation "io.reactivex.rxjava3:rxjava:$rxjava3"
}